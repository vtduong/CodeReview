package linkedList;

public class LinkedList {
	private Node head = null;
	private Node tail = null;
	private int length = 0;
	public LinkedList() {
		
	}
	
	public void append(int data) {
		Node node = new Node(data, null);
		if (head == null) {
			head = node;
			tail = node;
		}
		else {
			tail.next = node;
			tail = node;
		}
		length++;
	}
	
	public void insert(int idx, int data) {
		Node node = new Node(data, null);
		if(idx == 0) {
			node.next = head.next;
			head = node;
		} else {
			int i = 0;
			Node curr = head;
			while(i < idx-1 ) {
				curr = curr.next;
				i++;
			}
			node.next = curr.next;
			curr.next = node;
			curr = null;
			if(idx == length -1) {
				tail = node;
			}
		}
		length++;
	}
	
	public int delete(int idx, int data) {
		Node curr = head;
		int returnData = 0;
		if(idx == 0) {
			returnData = head.data;
			head = head.next;
		} else if( idx == length -1){
			returnData = tail.data;
			tail = null;
		} else {
			int i = 0;
			while( i < idx -1) {
				curr = curr.next;
				i++;
			}
			
		}
		length--;
		return returnData;
	}
	
	private class Node{
		 private int data;
		 private Node next;
		
		private Node(int data, Node next){
			this.data = data;
			this.next = next;
		}
		
		private Node() {
			this(0, null);
		}
	}
}
